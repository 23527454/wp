/**
 * Copyright &copy; 2012-2017 <a href="https://www.jumbo-soft.com/">Jumbo Soft</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.tbmj.web;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.mapper.JsonMapper;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.JsonDateValueProcessor;
import com.thinkgem.jeesite.common.utils.Reflections;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.modules.sys.dao.UserDao;
import com.thinkgem.jeesite.modules.sys.entity.User;
import com.thinkgem.jeesite.modules.sys.utils.UserUtils;
import com.thinkgem.jeesite.modules.tbmj.entity.AccessEventDetail;
import com.thinkgem.jeesite.modules.tbmj.service.AccessEventDetailService;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationHome;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * 事件详情Controller
 * @author Jumbo
 * @version 2017-07-14
 */
@Controller
@RequestMapping(value = "${adminPath}/tbmj/image")
public class AccessImageController extends BaseController {

	@Autowired
	private AccessEventDetailService accessEventDetailService;
	@Autowired
	private UserDao userDao;
	
	private static final String
	@ModelAttribute
	public AccessEventDetail get(@RequestParam(required=false) String id) {
		AccessEventDetail entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = accessEventDetailService.get(id);
		}
		if (entity == null){
			entity = new AccessEventDetail();
		}
		return entity;
	}
	
	@RequiresPermissions("tbmj:eventDetail:view")
	@RequestMapping(value = {"list"})
	public String list(AccessEventDetail accessEventDetail, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<AccessEventDetail> page = accessEventDetailService.findPage(new Page<AccessEventDetail>(request, response), accessEventDetail);
		model.addAttribute("page", page);
		return "modules/tbmj/eventDetailList";
	}

	@RequestMapping(value = "")
	public void image(AccessEventDetail accessEventDetail, HttpServletRequest request, HttpServletResponse response, Model model) throws IOException{
		System.out.println("image-----eventDetail.getBigDataFlag()++++++++++++++++++++++++++++++++++++++"+ accessEventDetail.getBigDataFlag());
		if(StringUtils.isNotBlank(accessEventDetail.getId())){
			AccessEventDetail r = get(accessEventDetail.getId());
			if(r!=null && r.getImageData()!=null && r.getImageData().length > 0){
				BufferedImage image = ImageIO.read(new ByteArrayInputStream(r.getImageData()));
			    response.setContentType("image/jpg");  
			    OutputStream os = response.getOutputStream();  
			    ImageIO.write(image, "jpg", os);
			    return;
			}else{
				if(r!=null&&r.getImageData()==null){
					if(StringUtils.isNotEmpty(accessEventDetail.getBigDataFlag())){
						try {
							Thread.sleep(1000);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						int i=0;
						while(i<5){
							r = get(accessEventDetail.getId());
							if(r.getImageData()==null){
								i++;
								try {
									Thread.sleep(1000);
								} catch (InterruptedException e) {
									e.printStackTrace();
								}
							}else{
								break;
							}
						}
						if(r!=null && r.getImageData()!=null && r.getImageData().length > 0){
							BufferedImage image = ImageIO.read(new ByteArrayInputStream(r.getImageData()));
							response.setContentType("image/jpg");
							OutputStream os = response.getOutputStream();
							ImageIO.write(image, "jpg", os);
						return;}
					}
				}
			}
		}
		responseNoPic(response);
	}

	private void responseNoPic(HttpServletResponse response) throws IOException{
//		byte[] b = hexStrToByteArray(NO_PIC);
//		BufferedImage image = ImageIO.read(new ByteArrayInputStream(b));
//	    response.setContentType("image/jpg");
//	    OutputStream os = response.getOutputStream();
//	    ImageIO.write(image, "jpg", os);
	}

	/**
	 * 获取列表数据（JSON）
	 * @param accessEventDetail
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequiresPermissions("tbmj:eventDetail:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public String listData(AccessEventDetail accessEventDetail, HttpServletRequest request, HttpServletResponse response, Model model) {
		User user = UserUtils.getUser();
		if (!user.isAdmin()){
			accessEventDetail.setCreateBy(user);
		}
		
		String filterRules = request.getParameter("filterRules");
		JsonConfig jsonConfig = new JsonConfig();
		jsonConfig.registerJsonValueProcessor(Date.class,
				new JsonDateValueProcessor());
		if(StringUtils.isNoneBlank(filterRules)){
				JSONArray filter = JSONArray.fromObject(filterRules, jsonConfig);
				List<Field> fields = new ArrayList();
				Reflections.getAllFields(fields, AccessEventDetail.class);
				if(filter!=null&& filter.size()>0){
					for (Object o : filter) {
						JSONObject oo = (JSONObject) o;
						for(int i=0;i<fields.size();i++){  
							if(fields.get(i).getName().equals(oo.get("field"))){
								Reflections.invokeSetter(accessEventDetail, fields.get(i).getName(), oo.get("value"));
							}
						}
					}
				}
				
		}
		
        Page<AccessEventDetail> page = accessEventDetailService.findPage(new Page<AccessEventDetail>(request, response), accessEventDetail);
        JSONObject jo = JSONObject.fromObject(JsonMapper.toJsonString(page));
        JSONArray ja = jo.getJSONArray("list");
        for(int i = 0;ja!=null&&i<ja.size();i++){
        	JSONObject e = (JSONObject) ja.get(i);
        }
        return jo.toString();
	}

	@RequiresPermissions("tbmj:eventDetail:view")
	@RequestMapping(value = "form")
	public String form(AccessEventDetail accessEventDetail, Model model) {
		model.addAttribute("eventDetail", accessEventDetail);
		return "modules/tbmj/eventDetailForm";
	}

	@RequiresPermissions("tbmj:eventDetail:edit")
	@RequestMapping(value = "save")
	public String save(AccessEventDetail accessEventDetail, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, accessEventDetail)){
			return form(accessEventDetail, model);
		}
		accessEventDetailService.save(accessEventDetail);
		addMessage(redirectAttributes, "保存事件详情成功");
		return "redirect:"+Global.getAdminPath()+"/tbmj/eventDetail/?repage";
	}
	
	@RequiresPermissions("tbmj:eventDetail:edit")
	@RequestMapping(value = "delete")
	public String delete(AccessEventDetail accessEventDetail, RedirectAttributes redirectAttributes) {
		accessEventDetailService.delete(accessEventDetail);
		addMessage(redirectAttributes, "删除事件详情成功");
		return "redirect:"+Global.getAdminPath()+"/tbmj/eventDetail/?repage";
	}

	private String getJarPath() {
		ApplicationHome h = new ApplicationHome(getClass());
		File jarF = h.getSource();
		return jarF.getParentFile().toString();
	}
}